//================================================
        Response.Listener<String> responseListener = response -> {
//                token
            Log.d("token", response);
            try {
                JSONObject jsonObject = new JSONObject(response);
                String accessToken = jsonObject.getString("accessToken");
                String refreshToken = jsonObject.getString("refreshToken");

                SharedPreferences.Editor editor = loginSP.edit();
                editor.putString("accessToken", accessToken);
                editor.putString("refreshToken", refreshToken);
                editor.apply();

            } catch (JSONException e) {
                e.printStackTrace();
            }

            Intent intent = new Intent(LoginActivity.this, MainActivity.class);
            LoginActivity.this.startActivity(intent);
        };

        Response.ErrorListener errorResponse = error -> {
            NetworkResponse networkResponse = error.networkResponse;
            if (networkResponse != null && networkResponse.data != null) {
                String jsonError = new String(networkResponse.data);
                try {
                    JSONObject jsonObject = new JSONObject(jsonError);
                    String message = jsonObject.getString("message");
                    Toast.makeText( getApplicationContext(), message, Toast.LENGTH_SHORT ).show();
                } catch (JSONException e) {
                    e.printStackTrace();
                }
                login_pw.setText("");
            }
        };
        //================================================

        package com.example.wishhair.sign;

        import com.android.volley.AuthFailureError;
        import com.android.volley.Response;
        import com.android.volley.toolbox.StringRequest;

        import java.util.HashMap;
        import java.util.Map;

        public class RegisterRequest extends StringRequest {
            final static private String URL = UrlConst.URL + "/api/user";
            private final Map<String, String> map;

            public RegisterRequest(String loginId, String pw, String name, String nickname, String sex, Response.Listener<String> listener, Response.ErrorListener errorListener) {
                super(Method.POST, URL, listener, errorListener);

                map = new HashMap<>();
                map.put("email", loginId);
                map.put("pw", pw);
                map.put("name", name);
                map.put("nickname", nickname);
                map.put("sex", sex);
            }

            @Override
            protected Map<String, String> getParams() {
                return map;
            }

        }
